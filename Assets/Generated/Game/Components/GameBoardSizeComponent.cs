//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity boardSizeEntity { get { return GetGroup(GameMatcher.BoardSize).GetSingleEntity(); } }
    public BoardSizeComponent boardSize { get { return boardSizeEntity.boardSize; } }
    public bool hasBoardSize { get { return boardSizeEntity != null; } }

    public GameEntity SetBoardSize(int newRow, int newColumn) {
        if (hasBoardSize) {
            throw new Entitas.EntitasException("Could not set BoardSize!\n" + this + " already has an entity with BoardSizeComponent!",
                "You should check if the context already has a boardSizeEntity before setting it or use context.ReplaceBoardSize().");
        }
        var entity = CreateEntity();
        entity.AddBoardSize(newRow, newColumn);
        return entity;
    }

    public void ReplaceBoardSize(int newRow, int newColumn) {
        var entity = boardSizeEntity;
        if (entity == null) {
            entity = SetBoardSize(newRow, newColumn);
        } else {
            entity.ReplaceBoardSize(newRow, newColumn);
        }
    }

    public void RemoveBoardSize() {
        boardSizeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BoardSizeComponent boardSize { get { return (BoardSizeComponent)GetComponent(GameComponentsLookup.BoardSize); } }
    public bool hasBoardSize { get { return HasComponent(GameComponentsLookup.BoardSize); } }

    public void AddBoardSize(int newRow, int newColumn) {
        var index = GameComponentsLookup.BoardSize;
        var component = (BoardSizeComponent)CreateComponent(index, typeof(BoardSizeComponent));
        component.row = newRow;
        component.column = newColumn;
        AddComponent(index, component);
    }

    public void ReplaceBoardSize(int newRow, int newColumn) {
        var index = GameComponentsLookup.BoardSize;
        var component = (BoardSizeComponent)CreateComponent(index, typeof(BoardSizeComponent));
        component.row = newRow;
        component.column = newColumn;
        ReplaceComponent(index, component);
    }

    public void RemoveBoardSize() {
        RemoveComponent(GameComponentsLookup.BoardSize);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBoardSize;

    public static Entitas.IMatcher<GameEntity> BoardSize {
        get {
            if (_matcherBoardSize == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BoardSize);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBoardSize = matcher;
            }

            return _matcherBoardSize;
        }
    }
}
